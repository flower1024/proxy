user                                            spdyn;
worker_processes                                auto;

events {
    worker_connections                          1024;
}

daemon                                          off;
error_log                                       stderr warn;
pid                                             /run/nginx/nginx.pid;

http {
    client_body_temp_path                       /tmp/nginx 1 2;
    proxy_temp_path                             /tmp/nginx-proxy;
    fastcgi_temp_path                           /tmp/nginx-fastcgi;
    uwsgi_temp_path                             /tmp/nginx-uwsgi;
    scgi_temp_path                              /tmp/nginx-scgi;

    server_tokens                               off;

    include                                     mime.types;
    default_type                                application/octet-stream;

    log_format                              nc '[$time_local] $remote_user $status "$request"';
    log_format                              main '[$time_local] $remote_user $status "$request"';
    log_format                              vhost '[$time_local] $remote_user $status "$request"';
    access_log                              /dev/stdout vhost;

    sendfile                                on;
    proxy_buffering                         off;
    proxy_max_temp_file_size                0;
    proxy_buffers                           16 16k;
    fastcgi_buffering                       off;
    fastcgi_buffers                         64 4K;

    keepalive_timeout                       65;

    reset_timedout_connection               on;

    map $http_x_forwarded_proto $proxy_x_forwarded_proto {
        default $http_x_forwarded_proto;
        ''      $scheme;
    }

    map $http_x_forwarded_port $proxy_x_forwarded_port {
        default $http_x_forwarded_port;
        ''      $server_port;
    }

    map $http_upgrade $proxy_connection {
        default upgrade;
        '' close;
    }

    server_names_hash_bucket_size               128;
    
    ssl_dhparam                                 /etc/letsencrypt/dhparam.pem;

    map $scheme $proxy_x_forwarded_ssl {
        default                                 off;
        https                                   on;
    }

    gzip_types                                  text/plain text/css application/javascript application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    include                                     /etc/letsencrypt/*.conf;
    resolver                                    127.0.0.11;

    proxy_http_version                          1.1;
    proxy_set_header                            Host                $http_host;
    proxy_set_header                            Upgrade             $http_upgrade;
    proxy_set_header                            Connection          $proxy_connection;
    proxy_set_header                            X-Real-IP           $remote_addr;
    proxy_set_header                            X-Forwarded-For     $proxy_add_x_forwarded_for;
    proxy_set_header                            X-Forwarded-Proto   $proxy_x_forwarded_proto;
    proxy_set_header                            X-Forwarded-Ssl     $proxy_x_forwarded_ssl;
    proxy_set_header                            X-Forwarded-Port    $proxy_x_forwarded_port;
    proxy_set_header                            Proxy               "";
    set_real_ip_from                            10.0.0.0/8;
    set_real_ip_from                            172.16.0.0/12;
    set_real_ip_from                            192.168.0.0/16;
    real_ip_header                              X-Real-IP;

    server {
        listen                                  80 default_server;
        server_name                             _;

        location /.well-known/acme-challenge/ {
            auth_basic                          off;
            allow                               all;
            root                                /var/lib/letsencrypt/;
            try_files                           $uri =404;
            break;
        }

        location = /ping {
            return                              200 'pong';
            break;
        }

        location / {
            return                              500;
        }
    }

    include                                     /tmp/nginx/vhosts/*.conf;
}
